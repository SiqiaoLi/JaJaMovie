{"version":3,"sources":["api.js","components/Movie.js","actions/detailAction.js","components/MovieDetail.js","pages/Home.js","actions/moviesAction.js","components/GlobalStyles.js","components/Footer.js","App.js","reportWebVitals.js","reducers/moviesReducer.js","reducers/detailReducer.js","reducers/index.js","index.js"],"names":["base_url","api_key","movieBackdropsURL","movie_id","StyledMovie","styled","motion","div","Movie","title","released","id","posterPath","poster","dispatch","useDispatch","onClick","document","body","style","overflow","a","type","axios","get","detailData","movieBackdropsData","payload","movie","data","backdrops","loadDetail","to","src","alt","CardShadow","Detail","Stats","Info","Image","Genres","Backdrops","MovieDetail","history","useHistory","useSelector","state","detail","isLoading","className","e","target","classList","contains","push","poster_path","release_date","vote_average","genres","map","name","overview","file_path","MovieList","Movies","Home","pathId","useLocation","pathname","split","useEffect","upcomingData","popularData","nowPlayingData","upcoming","results","popular","nowPlaying","movies","GlobalStyles","createGlobalStyle","StyledFooter","footer","Footer","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","searched","movieReducer","action","initialState","detailReducer","rootReducer","combineReducers","moviesReducer","composeEnchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfc2c980.chunk.js","sourcesContent":["// Base URL\nconst base_url = \"https://api.themoviedb.org/3/movie/\";\nconst api_key = \"api_key=f6bbff71f547206eec4072098c9cfe17\";\n\nexport const poster_url = () => \"https://image.tmdb.org/t/p/w1280\";\nexport const backdrops_url = () =>\n  \"https://www.themoviedb.org/t/p/w1066_and_h600_bestv2\";\n\nexport const upcomingMoviesURL = () =>\n  `${base_url}upcoming?${api_key}&language=en-US`;\n\nexport const popularMoviesURL = () =>\n  `${base_url}popular?${api_key}&language=en-US&page=1`;\n\nexport const nowPlayingMoviesURL = () =>\n  `${base_url}now_playing?${api_key}&language=en-US&page=1`;\n\n// Movie details\nexport const movieDetailsURL = (movie_id) =>\n  `${base_url}${movie_id}?${api_key}&language=en-US`;\n\n// Movie video\nexport const movieBackdropsURL = (movie_id) =>\n  `${base_url}${movie_id}/images?${api_key}`;\n","import React from \"react\";\nimport { poster_url } from \"../api\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useDispatch } from \"react-redux\";\nimport { loadDetail } from \"../actions/detailAction\";\nimport { Link } from \"react-router-dom\";\n\nconst Movie = ({ title, released, id, posterPath }) => {\n  const poster = `${poster_url()}${posterPath}`;\n\n  const dispatch = useDispatch();\n  const loadDetailHandler = () => {\n    document.body.style.overflow = \"hidden\";\n    dispatch(loadDetail(id));\n  };\n\n  return (\n    <StyledMovie onClick={loadDetailHandler}>\n      <Link to={`/movie/${id}`}>\n        <img src={poster} alt=\"poster\" />\n        <h3>{title}</h3>\n        <p>{released}</p>\n      </Link>\n    </StyledMovie>\n  );\n};\n\nconst StyledMovie = styled(motion.div)`\n  min-height: 30vh;\n  box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 50vh;\n    object-fit: cover;\n  }\n  p {\n    padding-bottom: 0.5rem;\n  }\n  h3 {\n    padding: 1rem;\n  }\n`;\n\nexport default Movie;\n","import axios from \"axios\";\nimport { movieDetailsURL, movieBackdropsURL } from \"../api\";\n\nexport const loadDetail = (id) => async (dispatch) => {\n  dispatch({\n    type: \"LOADING_DETAIL\",\n  });\n\n  const detailData = await axios.get(movieDetailsURL(id));\n  const movieBackdropsData = await axios.get(movieBackdropsURL(id));\n\n  dispatch({\n    type: \"GET_DETAIL\",\n    payload: {\n      movie: detailData.data,\n      backdrops: movieBackdropsData.data,\n    },\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { poster_url, backdrops_url } from \"../api\";\n\nconst MovieDetail = () => {\n  const history = useHistory();\n\n  const exitDetailHandler = (e) => {\n    const element = e.target;\n    if (element.classList.contains(\"shadow\")) {\n      document.body.style.overflow = \"auto\";\n      history.push(\"/\");\n    }\n  };\n\n  const { movie, backdrops, isLoading } = useSelector((state) => state.detail);\n\n  return (\n    <>\n      {!isLoading && (\n        <CardShadow className=\"shadow\" onClick={exitDetailHandler}>\n          <Detail>\n            <Stats>\n              <Image>\n                <img\n                  src={`${poster_url()}${movie.poster_path}`}\n                  alt={movie.title}\n                />\n              </Image>\n              <Info>\n                <div className=\"rating\">\n                  <h3>{`${movie.title} (${movie.release_date})`}</h3>\n                  <h4>Rating</h4>\n                  <p>{movie.vote_average}</p>\n                </div>\n                <h4>Genres</h4>\n                <Genres>\n                  {movie.genres.map((data) => (\n                    <p key={data.id}>{data.name}</p>\n                  ))}\n                </Genres>\n                <div className=\"overview\">\n                  <h4>Overview</h4>\n                  <p>{movie.overview}</p>\n                </div>\n              </Info>\n            </Stats>\n            <h4>Backdrops</h4>\n            <Backdrops>\n              {backdrops.backdrops.map((data) => (\n                <img src={`${backdrops_url()}${data.file_path}`} />\n              ))}\n            </Backdrops>\n          </Detail>\n        </CardShadow>\n      )}\n    </>\n  );\n};\n\nconst CardShadow = styled(motion.div)`\n  width: 100%;\n  min-height: 100vh;\n  overflow-y: scroll;\n  background: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 5;\n\n  &::-webkit-scrollbar {\n    width: 0.5rem;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: darkgray;\n  }\n  &::-webkit-scrollbar-track {\n    background: white;\n  }\n`;\n\nconst Detail = styled(motion.div)`\n  width: 80%;\n  border-radius: 0.5rem;\n  padding: 2rem 4rem;\n  background: white;\n  position: absolute;\n  left: 10%;\n  color: black;\n  z-index: 10;\n`;\n\nconst Stats = styled(motion.div)`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding-bottom: 2rem;\n  border-bottom: 2px solid grey;\n`;\n\nconst Info = styled(motion.div)`\n  padding: 1.5rem 3rem 0rem 3rem;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst Image = styled(motion.div)`\n  margin-top: 3rem;\n  img {\n    border-radius: 0.4rem;\n    width: 35vh;\n    height: 50vh;\n    object-fit: cover;\n  }\n`;\n\nconst Genres = styled(motion.div)`\n  display: flex;\n  justify-content: space-between;\n  p {\n    margin-right: 1rem;\n  }\n`;\n\nconst Backdrops = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  img {\n    width: 100vh;\n    object-fit: cover;\n    padding: 0.5rem 0rem;\n  }\n`;\n\nexport default MovieDetail;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadMovies } from \"../actions/moviesAction\";\nimport Movie from \"../components/Movie\";\nimport MovieDetail from \"../components/MovieDetail\";\n\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Home = () => {\n  // get the current location\n  const location = useLocation();\n  const pathId = location.pathname.split(\"/\")[2];\n\n  // Fetch movies\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadMovies());\n  }, [dispatch]);\n\n  // get the data\n  const { popular, nowPlaying, upcoming } = useSelector(\n    (state) => state.movies\n  );\n\n  return (\n    <MovieList>\n      {pathId && <MovieDetail />}\n      <h2>Upcoming Movies</h2>\n      <Movies>\n        {upcoming.map((movie) => (\n          <Movie\n            title={movie.title}\n            released={movie.release_date}\n            posterPath={movie.poster_path}\n            id={movie.id}\n            key={movie.id}\n          />\n        ))}\n      </Movies>\n      <h2>Now Playing Movies</h2>\n      <Movies>\n        {nowPlaying.map((movie) => (\n          <Movie\n            title={movie.title}\n            released={movie.release_date}\n            posterPath={movie.poster_path}\n            id={movie.id}\n            key={movie.id}\n          />\n        ))}\n      </Movies>\n      <h2>Popular Movies</h2>\n      <Movies>\n        {popular.map((movie) => (\n          <Movie\n            title={movie.title}\n            released={movie.release_date}\n            posterPath={movie.poster_path}\n            id={movie.id}\n            key={movie.id}\n          />\n        ))}\n      </Movies>\n    </MovieList>\n  );\n};\n\nconst MovieList = styled(motion.div)`\n  padding: 4rem 5rem;\n  h2 {\n    padding-top: 2rem;\n    padding-bottom: 1.5rem;\n  }\n`;\nconst Movies = styled(motion.div)`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n  grid-column-gap: 2rem;\n  grid-row-gap: 4rem;\n`;\n\nexport default Home;\n","import axios from \"axios\";\nimport {\n  upcomingMoviesURL,\n  nowPlayingMoviesURL,\n  popularMoviesURL,\n} from \"../api\";\n\nexport const loadMovies = () => async (dispatch) => {\n  const upcomingData = await axios.get(upcomingMoviesURL());\n  const popularData = await axios.get(popularMoviesURL());\n  const nowPlayingData = await axios.get(nowPlayingMoviesURL());\n\n  dispatch({\n    type: \"FETCH_MOVIES\",\n    payload: {\n      upcoming: upcomingData.data.results,\n      popular: popularData.data.results,\n      nowPlaying: nowPlayingData.data.results,\n    },\n  });\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing:border-box;\n  }\n  html {\n    &::-webkit-scrollbar{\n      width: 0.5rem;\n    }\n    &::-webkit-scrollbar-thumb{\n      background-color: darkgray;\n    }\n    &::-webkit-scrollbar-track {\n      background: white;\n    }\n  }\n  body {\n    font-family: 'Montserrat', sans-serif;\n    width: 100%;\n  }\n  h2 {\n    font-size: 2rem;\n    font-family: 'Abril Fatface', cursive;\n    font-weight: lighter;\n    color: #333;\n  }\n  h3 {\n    font-size: 1.3rem;\n    color: #333;\n    padding: 1.5rem 0rem;\n  }\n  h4 {\n    padding-top: 1.5rem;\n  }\n  p{\n    font-size: 1.1rem;\n    line-height:200%;\n    color: #696969;\n  }\n  a{\n    text-decoration: none;\n    color: #333;\n  }\n  img{\n    display: block;\n  }\n  input{\n    font-weight: bold;\n    font-family: 'Monserrat', sans-serif;\n  }\n\n  .App {\n    position: relative;\n    min-height: 100vh;\n  }\n\n  .content-wrap{\n    padding-bottom: 6rem;\n  }\n\n\n`;\n\nexport default GlobalStyles;\n","import styled from \"styled-components\";\n\nconst Footer = () => {\n  return (\n    <StyledFooter>\n      <p>&copy; 2021 JaJaTao & TMDB</p>\n    </StyledFooter>\n  );\n};\n\nconst StyledFooter = styled.footer`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 6rem;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: #767682;\n  font-size: 0.75rem;\n`;\n\nexport default Footer;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport { Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyles />\n      <Route path={[\"/movie/:id\", \"/\"]}>\n        <div className=\"content-wrap\">\n          <Home />\n        </div>\n        <Footer />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n  popular: [],\n  nowPlaying: [],\n  upcoming: [],\n  searched: [],\n};\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"FETCH_MOVIES\":\n      return {\n        ...state,\n        upcoming: action.payload.upcoming,\n        popular: action.payload.popular,\n        nowPlaying: action.payload.nowPlaying,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default movieReducer;\n","const initialState = { movie: {}, backdrops: {}, isLoading: true };\n\nconst detailReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_DETAIL\":\n      return {\n        ...state,\n        movie: action.payload.movie,\n        backdrops: action.payload.backdrops,\n        isLoading: false,\n      };\n    case \"LOADING_DETAIL\":\n      return {\n        ...state,\n        isLoading: true,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default detailReducer;\n","import { combineReducers } from \"redux\";\nimport moviesReducer from \"./moviesReducer\";\nimport detailReducer from \"./detailReducer\";\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  detail: detailReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// redux setup\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst composeEnchancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnchancer(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}